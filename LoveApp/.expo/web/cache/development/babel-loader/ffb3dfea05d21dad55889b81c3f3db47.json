{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kevin/Desktop/LoveApp/src/Index.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nexport default App = function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      percentage = _useState2[0],\n      setPercentage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name1 = _useState4[0],\n      changeTextName1 = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name2 = _useState6[0],\n      changeTextName2 = _useState6[1];\n\n  function calculatePercentage() {\n    fetch(\"https://love-calculator.p.rapidapi.com/getPercentage?fname=\" + name1 + \"&sname=\" + name2, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"50a6ef8643msh531ca5ca3434591p17b1fcjsn56f86d5f0c88\",\n        \"x-rapidapi-host\": \"love-calculator.p.rapidapi.com\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      setPercentage(function (percentage) {\n        return percentage = response[\"percentage\"];\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return React.createElement(ImageBackground, {\n    style: {\n      flex: 1\n    },\n    imageStyle: styles.image,\n    source: require(\"../assets/love.jpg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter first name\",\n    onChangeText: function onChangeText(text) {\n      return changeTextName1(text);\n    },\n    value: name1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter second name\",\n    onChangeText: function onChangeText(text) {\n      return changeTextName2(text);\n    },\n    value: name2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: calculatePercentage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Calculate\")), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Percentage: \", percentage)));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#107a9e'\n  },\n  input: {\n    height: 50,\n    width: 300,\n    marginBottom: 20,\n    backgroundColor: '#b5b5b5',\n    borderRadius: 5,\n    padding: 5\n  },\n  text: {\n    marginTop: 20,\n    color: '#fff',\n    fontSize: 40,\n    fontWeight: 'bold'\n  },\n  button: {\n    height: 60,\n    width: 200,\n    backgroundColor: '#135b96',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 5,\n    borderRadius: 5\n  },\n  textButton: {\n    fontSize: 17,\n    color: '#fff'\n  },\n  image: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'cover'\n  }\n});","map":{"version":3,"sources":["/home/kevin/Desktop/LoveApp/src/Index.js"],"names":["React","useState","App","percentage","setPercentage","name1","changeTextName1","name2","changeTextName2","calculatePercentage","fetch","then","response","json","catch","error","console","log","flex","styles","image","require","container","input","text","button","textButton","StyleSheet","create","justifyContent","alignItems","backgroundColor","height","width","marginBottom","borderRadius","padding","marginTop","color","fontSize","fontWeight","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Text, StyleSheet, View, TextInput, TouchableOpacity, ImageBackground, StatusBar } from 'react-native'\n\nexport default App = () => {\n\n  const [percentage, setPercentage] = useState(0);\n  const [name1, changeTextName1] = useState('');\n  const [name2, changeTextName2] = useState('');\n\n  function calculatePercentage() {\n    fetch(`https://love-calculator.p.rapidapi.com/getPercentage?fname=${name1}&sname=${name2}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"50a6ef8643msh531ca5ca3434591p17b1fcjsn56f86d5f0c88\",\n        \"x-rapidapi-host\": \"love-calculator.p.rapidapi.com\"\n      }\n    })\n    .then(response => response.json()) \n    .then(response => {\n      setPercentage(percentage => percentage = response[\"percentage\"]);\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  return (\n    <ImageBackground\n      style={{flex: 1}}\n      imageStyle={styles.image}\n      source={require('../assets/love.jpg')}\n    >\n      <StatusBar barStyle=\"light-content\" />\n      <View style={styles.container}>\n        <TextInput \n          style={styles.input}\n          placeholder='Enter first name'\n          onChangeText={text => changeTextName1(text)}\n          value={name1}\n        />\n\n        <TextInput \n          style={styles.input}\n          placeholder='Enter second name'\n          onChangeText={text => changeTextName2(text)}\n          value={name2}\n        />\n\n        <TouchableOpacity\n          style={styles.button}\n          onPress={calculatePercentage}\n        >\n          <Text style={styles.textButton}>Calculate</Text>\n        </TouchableOpacity>\n\n        <Text style={styles.text}>Percentage: {percentage}</Text>\n      </View>\n  </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent:'center',\n    alignItems: 'center',\n    backgroundColor: '#107a9e',\n  },\n  input: {\n    height: 50,\n    width: 300,\n    marginBottom: 20,\n    backgroundColor: '#b5b5b5',\n    borderRadius: 5,\n    padding: 5\n  },\n  text: {\n    marginTop: 20,\n    color: '#fff',\n    fontSize: 40,\n    fontWeight: 'bold'\n  },\n  button: {\n    height: 60,\n    width: 200,\n    backgroundColor: '#135b96',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 5,\n    borderRadius: 5,\n\n  },\n  textButton: {\n    fontSize: 17,\n    color: '#fff',\n  },\n  image: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'cover',\n  }\n});"]},"metadata":{},"sourceType":"module"}