{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/kevin/Desktop/Learning-React-Native/WeatherApp/components/SearchInput.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nvar SearchInput = function (_React$Component) {\n  _inherits(SearchInput, _React$Component);\n\n  var _super = _createSuper(SearchInput);\n\n  function SearchInput() {\n    var _this;\n\n    _classCallCheck(this, SearchInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      text: ''\n    };\n\n    _this.handleChangeText = function (text) {\n      _this.setState({\n        text: text\n      });\n    };\n\n    _this.handleSubmitEditing = function () {\n      var onSubmit = _this.props.onSubmit;\n      var text = _this.state.text;\n      if (!text) return;\n      onSubmit(text);\n\n      _this.setState({\n        text: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchInput, [{\n    key: \"render\",\n    value: function render() {\n      var placeholder = this.props.placeholder;\n      var text = this.state.text;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        autoCorrect: false,\n        value: text,\n        placeholder: placeholder,\n        placeholderTextColor: \"white\",\n        underlineColorAndroid: \"transparent\",\n        style: styles.textInput,\n        clearButtonMode: \"always\",\n        onChangeText: this.handleChangeText,\n        onSubmitEditing: this.handleSubmitEditing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SearchInput;\n}(React.Component);\n\nSearchInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  placeholder: PropTypes.string\n};\nSearchInput.defaultProps = {\n  placeholder: ''\n};\nexport { SearchInput as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: 40,\n    marginTop: 20,\n    backgroundColor: '#666',\n    marginHorizontal: 40,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  textInput: {\n    flex: 1,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/home/kevin/Desktop/Learning-React-Native/WeatherApp/components/SearchInput.js"],"names":["PropTypes","React","SearchInput","state","text","handleChangeText","setState","handleSubmitEditing","onSubmit","props","placeholder","styles","container","textInput","Component","propTypes","func","isRequired","string","defaultProps","StyleSheet","create","height","marginTop","backgroundColor","marginHorizontal","paddingHorizontal","borderRadius","flex","color"],"mappings":";;;;;;;;;;;;;;AAGA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,W;;;;;;;;;;;;;;;UAUnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAIRC,gB,GAAmB,UAAAD,IAAI,EAAI;AACzB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACD,K;;UAEDG,mB,GAAsB,YAAM;AAAA,UAClBC,QADkB,GACL,MAAKC,KADA,CAClBD,QADkB;AAAA,UAElBJ,IAFkB,GAET,MAAKD,KAFI,CAElBC,IAFkB;AAI1B,UAAI,CAACA,IAAL,EAAW;AAEXI,MAAAA,QAAQ,CAACJ,IAAD,CAAR;;AACA,YAAKE,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;;;;;;WAED,kBAAS;AAAA,UACCM,WADD,GACiB,KAAKD,KADtB,CACCC,WADD;AAAA,UAECN,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;AAIP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE,KADf;AAEE,QAAA,KAAK,EAAER,IAFT;AAGE,QAAA,WAAW,EAAEM,WAHf;AAIE,QAAA,oBAAoB,EAAC,OAJvB;AAKE,QAAA,qBAAqB,EAAC,aALxB;AAME,QAAA,KAAK,EAAEC,MAAM,CAACE,SANhB;AAOE,QAAA,eAAe,EAAC,QAPlB;AAQE,QAAA,YAAY,EAAE,KAAKR,gBARrB;AASE,QAAA,eAAe,EAAE,KAAKE,mBATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAeD;;;;EA/CsCN,KAAK,CAACa,S;;AAA1BZ,W,CACZa,S,GAAY;AACjBP,EAAAA,QAAQ,EAAER,SAAS,CAACgB,IAAV,CAAeC,UADR;AAEjBP,EAAAA,WAAW,EAAEV,SAAS,CAACkB;AAFN,C;AADAhB,W,CAMZiB,Y,GAAe;AACpBT,EAAAA,WAAW,EAAE;AADO,C;SANHR,W;AAkDrB,IAAMS,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,SAAS,EAAE,EAFF;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,gBAAgB,EAAE,EAJT;AAKTC,IAAAA,iBAAiB,EAAE,EALV;AAMTC,IAAAA,YAAY,EAAE;AANL,GADoB;AAS/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE;AAFE;AAToB,CAAlB,CAAf","sourcesContent":["// implementation of SearchInput component\n\nimport { StyleSheet, TextInput, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class SearchInput extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n  };\n\n  static defaultProps = {\n    placeholder: '',\n  };\n\n  state = {\n    text: '',\n  };\n\n  handleChangeText = text => {\n    this.setState({ text });\n  };\n\n  handleSubmitEditing = () => {\n    const { onSubmit } = this.props;\n    const { text } = this.state;\n\n    if (!text) return;\n\n    onSubmit(text);\n    this.setState({ text: '' });\n  };\n\n  render() {\n    const { placeholder } = this.props;\n    const { text } = this.state;\n\n    return (\n      <View style={styles.container}>\n        <TextInput\n          autoCorrect={false}\n          value={text}\n          placeholder={placeholder}\n          placeholderTextColor=\"white\"\n          underlineColorAndroid=\"transparent\"\n          style={styles.textInput}\n          clearButtonMode=\"always\"\n          onChangeText={this.handleChangeText}\n          onSubmitEditing={this.handleSubmitEditing}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 40,\n    marginTop: 20,\n    backgroundColor: '#666',\n    marginHorizontal: 40,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  textInput: {\n    flex: 1,\n    color: 'white',\n  },\n});"]},"metadata":{},"sourceType":"module"}