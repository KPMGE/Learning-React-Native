{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var fetchLocationId = function fetchLocationId(city) {\n  var response, locations;\n  return _regeneratorRuntime.async(function fetchLocationId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://www.metaweather.com/api/location/search/?query=\" + city));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          locations = _context.sent;\n          return _context.abrupt(\"return\", locations[0].woeid);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var fetchWeather = function fetchWeather(woeid) {\n  var response, _await$response$json, title, consolidated_weather, _consolidated_weather, weather_state_name, the_temp;\n\n  return _regeneratorRuntime.async(function fetchWeather$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://www.metaweather.com/api/location/\" + woeid + \"/\"));\n\n        case 2:\n          response = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          _await$response$json = _context2.sent;\n          title = _await$response$json.title;\n          consolidated_weather = _await$response$json.consolidated_weather;\n          _consolidated_weather = consolidated_weather[0], weather_state_name = _consolidated_weather.weather_state_name, the_temp = _consolidated_weather.the_temp;\n          return _context2.abrupt(\"return\", {\n            location: title,\n            weather: weather_state_name,\n            temperature: the_temp\n          });\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/kevin/Desktop/Learning-React-Native/WeatherApp/utils/api.js"],"names":["fetchLocationId","city","fetch","response","json","locations","woeid","fetchWeather","title","consolidated_weather","weather_state_name","the_temp","location","weather","temperature"],"mappings":";AAAA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNC,KAAK,6DACgCD,IADhC,CADC;;AAAA;AACvBE,UAAAA,QADuB;AAAA;AAAA,2CAILA,QAAQ,CAACC,IAAT,EAJK;;AAAA;AAIvBC,UAAAA,SAJuB;AAAA,2CAKtBA,SAAS,CAAC,CAAD,CAAT,CAAaC,KALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAQP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAMD,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHJ,KAAK,+CACkBI,KADlB,OADF;;AAAA;AACpBH,UAAAA,QADoB;AAAA;AAAA,2CAIoBA,QAAQ,CAACC,IAAT,EAJpB;;AAAA;AAAA;AAIlBI,UAAAA,KAJkB,wBAIlBA,KAJkB;AAIXC,UAAAA,oBAJW,wBAIXA,oBAJW;AAAA,kCAKeA,oBAAoB,CAAC,CAAD,CALnC,EAKlBC,kBALkB,yBAKlBA,kBALkB,EAKEC,QALF,yBAKEA,QALF;AAAA,4CAOnB;AACLC,YAAAA,QAAQ,EAAEJ,KADL;AAELK,YAAAA,OAAO,EAAEH,kBAFJ;AAGLI,YAAAA,WAAW,EAAEH;AAHR,WAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["export const fetchLocationId = async city => {\n  const response = await fetch(\n    `https://www.metaweather.com/api/location/search/?query=${city}`,\n  );\n  const locations = await response.json();\n  return locations[0].woeid;\n};\n\nexport const fetchWeather = async woeid => {\n  const response = await fetch(\n    `https://www.metaweather.com/api/location/${woeid}/`,\n  );\n  const { title, consolidated_weather } = await response.json();\n  const { weather_state_name, the_temp } = consolidated_weather[0];\n\n  return {\n    location: title,\n    weather: weather_state_name,\n    temperature: the_temp,\n  };\n};"]},"metadata":{},"sourceType":"module"}